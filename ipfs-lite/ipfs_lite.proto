syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.textile.grpc_ipfs_lite";
option java_outer_classname = "IpfsLiteProto";
option objc_class_prefix = "TTE";

package ipfs_lite;

// Model messages

message AddParams {
    string layout = 1;
    string chunker = 2;
    bool rawLeaves = 3;
    bool hidden = 4;
    bool shared = 5;
    bool noCopy = 6;
    string hashFun = 7;
}

message Block {
    bytes rawData = 1;
    string cid = 2;
}

message Link {
    string name = 1;
    int64 size = 2;
    string cid  = 3;
}

message NodeStat {
    string hash = 1;
    int32 numLinks = 2;
    int32 blockSize = 3;
    int32 linksSize = 4;
    int32 dataSize = 5;
    int32 cumulativeSize = 6;
}

message Node {
    Block block = 1;
    repeated Link links = 2;
    NodeStat stat = 3;
    int64 size = 4;
}

// Request and Response messages

message AddFileRequest {
    oneof payload {
        AddParams addParams = 1;
        bytes chunk = 2;
    }
}

message AddFileResponse {
    Node node = 1;
}

message GetFileRequest {
    string cid = 1;
}

message GetFileResponse {
    bytes chunk = 1;
}

message AddNodeRequest {
    Block block = 1;
}

message AddNodeResponse {

}

message AddNodesRequest {
    repeated Block blocks = 1;
}

message AddNodesResponse {

}

message GetNodeRequest {
    string cid = 1;
}

message GetNodeResponse {
    Node node = 1;
}

message GetNodesRequest {
    repeated string cids = 1;
}

message GetNodesResponse {
    oneof option {
        Node node = 1;
        string error = 2;
    }
}

message RemoveNodeRequest {
    string cid = 1;
}

message RemoveNodeResponse {

}

message RemoveNodesRequest {
    repeated string cids = 1;
}

message RemoveNodesResponse {

}

message ResolveLinkRequest {
    string nodeCid = 1;
    repeated string path = 2;
}

message ResolveLinkResponse {
    Link link = 1;
    repeated string remainingPath = 2;
}

message TreeRequest {
    string nodeCid = 1;
    string path = 2;
    int32 depth = 3;
}

message TreeResponse {
    repeated string paths = 1;
}

message DeleteBlockRequest {
    string cid = 1;
}

message DeleteBlockResponse {
    
}

message HasBlockRequest {
    string cid = 1;
}

message HasBlockResponse {
    bool hasBlock = 1;
}

message GetBlockRequest {
    string cid = 1;
}

message GetBlockResponse {
    Block block = 1;
}

message GetBlockSizeRequest {
    string cid = 1;
}

message GetBlockSizeResponse {
    int32 size = 1;
}

message PutBlockRequest {
    Block block = 1;
}

message PutBlockResponse {
    
}

message PutBlocksRequest {
    repeated Block blocks = 1;
}

message PutBlocksResponse {
    
}

message AllKeysRequest {

}

message AllKeysResponse {
    string cid = 1;
}

message HashOnReadRequest {
    bool hashOnRead = 1;
}

message HashOnReadResponse {

}

service IpfsLite {
    rpc AddFile(stream AddFileRequest) returns (AddFileResponse) {}

    rpc GetFile(GetFileRequest) returns (stream GetFileResponse) {}

    rpc HasBlock(HasBlockRequest) returns (HasBlockResponse) {}

    // DAGService

    rpc AddNode(AddNodeRequest) returns (AddNodeResponse) {}

    rpc AddNodes(AddNodesRequest) returns (AddNodesResponse) {}

    rpc GetNode(GetNodeRequest) returns (GetNodeResponse) {}

    rpc GetNodes(GetNodesRequest) returns (stream GetNodesResponse) {}

    rpc RemoveNode(RemoveNodeRequest) returns (RemoveNodeResponse) {}

    rpc RemoveNodes(RemoveNodesRequest) returns (RemoveNodesResponse) {}

    // Node provides a ResloveLink method and the Resolver methods Resolve and Tree

    rpc ResolveLink(ResolveLinkRequest) returns (ResolveLinkResponse) {}

    rpc Tree(TreeRequest) returns (TreeResponse) {}
}
